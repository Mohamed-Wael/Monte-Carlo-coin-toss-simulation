# -*- coding: utf-8 -*-
"""MonteCarlo.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1shD1vK7cEaxYc9Fp68glbColrjGHTLrP
"""

import numpy as np
import random
import matplotlib.pyplot as plt


def unbiased_coin_toss():
    # Generate a random number from 0 to 1
    x = random.uniform(0, 1)
    # Probability that the number falls between 0 and 0.5 is 1/2
     
    if x > 0.5:
        # Heads for True
        return True
    else:
        # Tails for False
        return False


counter = 0
counter2 = 0

 
# Make 10000 experiments
for i in range(10000):
     
    # Each experiment have 3 coin tosses
    N = 3
    results = []
 
    # Toss the coin 3 times and store that in a list
    for i in range(N):
        result = unbiased_coin_toss()
        results.append(result)
 
    n_heads = sum(results)
    counter2 = counter2 + n_heads
    p_heads = n_heads/N
    if p_heads == (2/3):
      counter = counter +1
    p_heads_MC = counter/i


 
# average the probability of heads over 10000 experiments
p_heads_MC = counter/10000 
print("Probability is {:.3f}".format(p_heads_MC))

# average number of heads over 10000 experiments
avg_heads = counter2/10000 
print("avg number of heads is {:.3f}".format(avg_heads))